<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>One Love, One Lifetime</title>
  
  <subtitle>相信技术的力量.learn once, write everywhere,write once, run anywhere</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-02T08:26:28.899Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JingYuchun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序零基础入门踩坑之路</title>
    <link href="http://yoursite.com/2018/04/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E8%B8%A9%E5%9D%91%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2018/04/02/微信小程序零基础入门踩坑之路/</id>
    <published>2018-04-01T16:00:00.000Z</published>
    <updated>2018-04-02T08:26:28.899Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-gold-cdn.xitu.io/2018/4/2/16284f63ddf5438c?w=388&h=240&f=jpeg&s=4382" alt="微信小程序.jpg" title="">                </div>                <div class="image-caption">微信小程序.jpg</div>            </figure><pre><code>## 微信小程序&gt; 小程序是一种新的开放能力，开发者可以快速地开发一个小程序。小程序可以在微信内被便捷地获取和传播，同时具有出色的使用体验。&gt; 本人是一名忠实的Android研发,没有出过轨,对于css html js等仅仅是一知半解,这是在业余之际觉得想接触一下web,其实刚出来小程序那时候就尝试过,不过由于工作较忙,中途放弃了,如今小程序发展的还是挺快的,还是特别想学下前端知识.一是总结,二是分享给有需要的人,节省时间,少百度一些.不说废话,直接说有用的,开始吧.------#### 申请帐号1. 注册:[小程序注册](https://mp.weixin.qq.com/wxopen/waregister?action=step1)(不能是微信开放平台的邮箱)2. 登录后, 我们可以在菜单 “设置”-“开发设置” 看到小程序的 **AppID** 。![appid.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f63de18eb75?w=1193&amp;h=458&amp;f=png&amp;s=36609)#### 安装开发工具1. 前往 [开发者工具下载页面](https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html?t=2018327) ，根据自己的操作系统下载对应的安装包进行安装.2. 打开小程序开发者工具，用微信扫码登录开发者工具3. 选择**小程序**项目类型![项目类型.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f63de0192a0?w=396&amp;h=264&amp;f=png&amp;s=9385)4. 填入你申请的APPID 会自动生成一个QuickStart Project 直接进入即可看到一个简单的小程序![QuickStart.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f63de178281?w=413&amp;h=725&amp;f=png&amp;s=26690)5. 看看项目结构 挺清晰的.![项目结构.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f63de37fe72?w=858&amp;h=584&amp;f=png&amp;s=77760)​6. 至此,第一个小程序已经呈现在你面前,开发工具顶部栏有预览,你可以用手机扫描体验一下.------​#### 编辑器选择&gt; 经过一顿百度和前端的朋友咨询,发现了目前网上流行的几款: 微信开发工具、VSCode、Subline、webstom......说多无益,我们就选朋友推荐的VSCode 其他的没用过,暂时不进行对比了.- 当然了 我们是进行微信小程序开发,而且是没有前端基础的,所以建议先在微信开发工具中进行开发- 如果喜欢其他编辑器也可以[下载 VScode](https://code.visualstudio.com/) 里面有插件商店,提供各种插件,挺好的,主要是免费.#### UI组件库使用这里说明下为什么要有使用这个,正所谓站在前人的肩膀上,能够看的更远,看到的东西更多,省去了你在造轮子了,为了更快更好的开放一款自己的小程序,对于UI有强烈要求的就要用到别人写好的组件库了,不为什么,因为我不懂前端,让我自己写要学基础好几天,不过话说回来,基础还是要学的,这里只是想最快速度了解前端和小程序开发整体- 原生组件库 微信本身提供的一套基础组件 官方教程有详细文档- WeUI 同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信 Web 开发量身设计- MinUI 第三方基于规范的小程序组件库，简洁、易用、工具化,并支持wepy和组件化方案等- ZanUI 第三方的一个颜值高、好用、易扩展的微信小程序 UI 库#### 立项&gt; 如果你有其他语言的开发基础,那么可以直接进行开发,别怕,我们边做边学,我用了一个星期搞定,你也可以3天或者1天.下面拿我的练习项目为例 《[学安卓](https://github.com/jingyc0305/wxsmalldemo)》数据来源 鸿洋大神的网站API 《[玩安卓](http://www.wanandroid.com/)》用于搜集安卓技术文章及众多实用工具的,很方便,详细API可以查看[玩安卓的API文档](http://www.wanandroid.com/blog/show/2)下面我们就开始第一个页面的开发 这是效果图 功能很简单,banner+列表##{% image https://user-gold-cdn.xitu.io/2018/4/2/16284f63e0a70d6f?w=399&h=710&f=png&s=111591 '1.png' '' %}#### 页面的生命周期<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">Page(&#123;</div><div class="line">/**</div><div class="line">* 页面的初始数据</div><div class="line">*/</div><div class="line">data: &#123;&#125;,</div><div class="line">/**</div><div class="line">* 生命周期函数--监听页面加载</div><div class="line">*/</div><div class="line">onLoad: function (options) &#123;&#125;,</div><div class="line">/**</div><div class="line">* 生命周期函数--监听页面初次渲染完成</div><div class="line">*/</div><div class="line">onReady: function () &#123;&#125;,</div><div class="line">/**</div><div class="line">* 生命周期函数--监听页面显示</div><div class="line">*/</div><div class="line">onShow: function () &#123;&#125;,</div><div class="line">/**</div><div class="line">* 生命周期函数--监听页面隐藏</div><div class="line">*/</div><div class="line">onHide: function () &#123;&#125;,</div><div class="line">/**</div><div class="line">* 生命周期函数--监听页面卸载</div><div class="line">*/</div><div class="line">onUnload: function () &#123;&#125;,</div><div class="line">/**</div><div class="line">* 页面相关事件处理函数--监听用户下拉动作</div><div class="line">*/</div><div class="line">onPullDownRefresh: function () &#123;&#125;,</div><div class="line">/**</div><div class="line">* 页面上拉触底事件的处理函数</div><div class="line">*/</div><div class="line">onReachBottom: function () &#123;&#125;,</div><div class="line">/**</div><div class="line">* 用户点击右上角分享</div><div class="line">*/</div><div class="line">onShareAppMessage: function () &#123;&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>#### 首页##### 1.首页banner<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">http://www.wanandroid.com/banner/json</div><div class="line"></div><div class="line">方法：GET</div><div class="line">参数：无</div></pre></td></tr></table></figure>可直接点击查看示例：&lt;http://www.wanandroid.com/banner/json&gt;##### 2.首页文章列表<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">http://www.wanandroid.com/article/list/0/json</div><div class="line"></div><div class="line">方法：GET</div><div class="line">参数：页码，拼接在连接中，从0开始。</div></pre></td></tr></table></figure>可直接点击查看示例：&lt;http://www.wanandroid.com/article/list/1/json&gt;。注意：页码从0开始，拼接在链接上。其中有两个易混淆的字段:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;superChapterId&quot;: 153,</div><div class="line">&quot;superChapterName&quot;: &quot;framework&quot;, // 一级分类的名称</div></pre></td></tr></table></figure>superChapterId其实不是一级分类id，因为要拼接跳转url，内容实际都挂在二级分类下，所以该id实际上是一级分类的第一个子类目的id，拼接后故可正常跳转。------**附上index.wxml参考代码:**![index.wxml](https://user-gold-cdn.xitu.io/2018/4/2/16285711b0d72f81?w=1436&amp;h=760&amp;f=png&amp;s=156983)**附上index.js参考代码:**-  data里是数据绑定的关键,即布局中定义的变量和这里都是对应的,当这里的值被赋值或变更,影响页面更新.- 使用方法 变量名:默认值 如:imgUrls: []- imgUrls:[] 为banner的数组来源,在布局wxml中可以找到 在wxml中一定是{{}}双层大括号才可以.- ​  block为块 具体查看文档介绍- ​  wx:for为循环列表对应的数据源 在小程序中即为数组对象- ​  wx:key 为每个item的唯一标识-   item变量代指为循环列表默认的其中的元素对象 也可以指定名称 如:wx:for-item=&quot;{{banner_item}}&quot;![wxml.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f640d5353f6?w=1079&amp;h=253&amp;f=png&amp;s=28059)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line">//获取应用实例</div><div class="line">var app = getApp()</div><div class="line">Page(&#123;</div><div class="line">data: &#123;</div><div class="line">imgUrls: [],</div><div class="line">mode: &apos;aspectFill&apos;,</div><div class="line">indicatorDots: true,</div><div class="line">autoplay: true,</div><div class="line">interval: 3000,</div><div class="line">duration: 1000,</div><div class="line">articals: [],</div><div class="line">curPage: 1,</div><div class="line">perPageSize: 20,</div><div class="line">pageCount: 59,</div><div class="line">isHideLoadMore: false,</div><div class="line">loadingMoreHidden: true,</div><div class="line">dir:&apos;top&apos;,</div><div class="line">item_content_dir:&apos;between&apos;,</div><div class="line">likesrc:&apos;../images/index/like_normal.png&apos;</div><div class="line">&#125;,</div><div class="line">//进入文章详细页面</div><div class="line">goToArticalDetail: function (e) &#123;</div><div class="line">var that = this</div><div class="line">var item_index = parseInt(e.currentTarget.dataset.index)</div><div class="line">console.log(&quot;item_index = &quot; + item_index)</div><div class="line">wx.navigateTo(&#123;</div><div class="line">url: &apos;../index-detail/index-detail?title=&apos; + that.data.articals[item_index].title + &apos;&amp;link=&apos; + that.data.articals[item_index].link</div><div class="line">&#125;)</div><div class="line">&#125;,</div><div class="line">onLoad: function () &#123;</div><div class="line">console.log(&apos;onLoad&apos;)</div><div class="line">//显示标题菊花</div><div class="line">wx.showNavigationBarLoading()</div><div class="line">//获取轮播图</div><div class="line">this.getBanners()</div><div class="line">//默认加载第0页</div><div class="line">var curPage = 0</div><div class="line">//获取文章列表</div><div class="line">this.getArticals(curPage)</div><div class="line">&#125;,</div><div class="line">onPullDownRefresh: function () &#123;</div><div class="line">this.data.curPage = 0</div><div class="line">this.getArticals(0)</div><div class="line">console.log(&apos;下拉刷新&apos;)</div><div class="line">&#125;,</div><div class="line">onReachBottom: function () &#123;</div><div class="line">console.log(&apos;加载更多&apos;)</div><div class="line">if (!this.data.loadingMoreHidden) &#123;</div><div class="line"></div><div class="line">&#125; else &#123;</div><div class="line">this.getArticals(this.data.curPage)</div><div class="line">&#125;</div><div class="line">this.setData(&#123;</div><div class="line">loadingMoreHidden: true</div><div class="line">&#125;)</div><div class="line"></div><div class="line">&#125;,</div><div class="line">showAddItem: function () &#123;</div><div class="line">this.setData(&#123;</div><div class="line">addVlue: !this.data.addVlue</div><div class="line">&#125;)</div><div class="line"></div><div class="line">&#125;,</div><div class="line">getArticals: function (artical_pageindex) &#123;</div><div class="line">var that = this</div><div class="line">wx.request(&#123;</div><div class="line">url: &apos;http://www.wanandroid.com/article/list/&apos; + artical_pageindex + &apos;/json&apos;,</div><div class="line">data: &#123;</div><div class="line">&#125;,</div><div class="line">method: &apos;GET&apos;,</div><div class="line">header: &#123;</div><div class="line">&apos;content-type&apos;: &apos;application/json&apos;</div><div class="line">&#125;,</div><div class="line">success: function (res) &#123;</div><div class="line">wx.hideNavigationBarLoading()</div><div class="line">that.setData(&#123;</div><div class="line">perPageSize: res.data.data.size,</div><div class="line">curPage: res.data.data.curPage,</div><div class="line">pageCount: res.data.data.pageCount</div><div class="line">&#125;)</div><div class="line">var articalsTemp = that.data.articals</div><div class="line">if (that.data.curPage == 1) &#123;</div><div class="line">articalsTemp = []</div><div class="line">&#125;</div><div class="line">var articals = res.data.data.datas</div><div class="line">if (articals.length &lt; that.data.perPageSize) &#123;</div><div class="line">console.log(&apos;没有更多了&apos;)</div><div class="line">that.setData(&#123;</div><div class="line">articals: articalsTemp.concat(articals),</div><div class="line">loadingMoreHidden: false</div><div class="line">&#125;)</div><div class="line">&#125; else &#123;</div><div class="line">console.log(&apos;有更多可加载&apos;)</div><div class="line">that.setData(&#123;</div><div class="line">articals: articalsTemp.concat(articals),</div><div class="line">loadingMoreHidden: true,</div><div class="line">curPage: that.data.curPage + 1</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;)</div><div class="line">&#125;,</div><div class="line">getBanners: function () &#123;</div><div class="line">var that = this</div><div class="line">wx.request(&#123;</div><div class="line">url: &apos;http://www.wanandroid.com/banner/json&apos;,</div><div class="line">data: &#123;</div><div class="line">&#125;,</div><div class="line">method: &apos;GET&apos;,</div><div class="line">header: &#123;</div><div class="line">&apos;content-type&apos;: &apos;application/json&apos;</div><div class="line">&#125;,</div><div class="line">success: function (res) &#123;</div><div class="line">wx.stopPullDownRefresh()</div><div class="line">that.setData(&#123;</div><div class="line">imgUrls: res.data.data</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line">&#125;)</div><div class="line">&#125;,</div><div class="line">//添加文章到我的收藏</div><div class="line">onClickAddLike: function()&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;)</div></pre></td></tr></table></figure>**index.wcss参考GitHub源代码:****附上index.json参考代码:**说明: 我项目中的UI组件库引用了MinUI和WeUI,具体使用参照[MinUI组件库仓库地址]: https://github.com/meili/minui[Min-Cli使用手册地址]: https://meili.github.io/min/docs/install/index.html<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;navigationBarTitleText&quot;: &quot;玩安卓&quot;,</div><div class="line">&quot;usingComponents&quot;: &#123;</div><div class="line">&quot;wxc-toast&quot;: &quot;../../dist/packages/@minui/wxc-toast/dist/index&quot;,</div><div class="line">&quot;wxc-icon&quot;: &quot;../../dist/packages/@minui/wxc-icon/dist/index&quot;,</div><div class="line">&quot;wxc-label&quot;: &quot;../../dist/packages/@minui/wxc-label/dist/index&quot;,</div><div class="line">&quot;wxc-flex&quot;: &quot;../../dist/packages/@minui/wxc-flex/dist/index&quot;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>[WeUI组件库仓库地址]: https://github.com/Tencent/weui![引入WeUI组件样式](https://user-gold-cdn.xitu.io/2018/4/2/16284f6413ae3197?w=377&amp;h=254&amp;f=png&amp;s=5700)![1522639536966.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f640171716c?w=762&amp;h=376&amp;f=png&amp;s=45211)将下载的weui.wxss文件放至项目的根目录下 在app.wxss文件中 @import &apos;weui.wxss&apos;即可使用了.------#### 底部tabBar在app.json中配置即可<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&quot;tabBar&quot;: &#123;</div><div class="line">&quot;selectedColor&quot;: &quot;#69C3AA&quot;,</div><div class="line">&quot;list&quot;: [</div><div class="line">&#123;</div><div class="line">&quot;pagePath&quot;: &quot;pages/index/index&quot;,</div><div class="line">&quot;text&quot;: &quot;首页&quot;,</div><div class="line">&quot;iconPath&quot;: &quot;pages/images/nav/home_normal.png&quot;,</div><div class="line">&quot;selectedIconPath&quot;: &quot;pages/images/nav/home_select.png&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;pagePath&quot;: &quot;pages/nav/nav&quot;,</div><div class="line">&quot;text&quot;: &quot;导航&quot;,</div><div class="line">&quot;iconPath&quot;: &quot;pages/images/nav/nav_normal.png&quot;,</div><div class="line">&quot;selectedIconPath&quot;: &quot;pages/images/nav/nav_select.png&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;pagePath&quot;: &quot;pages/project/project&quot;,</div><div class="line">&quot;text&quot;: &quot;项目&quot;,</div><div class="line">&quot;iconPath&quot;: &quot;pages/images/nav/project_normal.png&quot;,</div><div class="line">&quot;selectedIconPath&quot;: &quot;pages/images/nav/project_select.png&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;pagePath&quot;: &quot;pages/hierarchy/hierarchy&quot;,</div><div class="line">&quot;text&quot;: &quot;体系&quot;,</div><div class="line">&quot;iconPath&quot;: &quot;pages/images/nav/tool_normal.png&quot;,</div><div class="line">&quot;selectedIconPath&quot;: &quot;pages/images/nav/tool_select.png&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;pagePath&quot;: &quot;pages/mine/mine&quot;,</div><div class="line">&quot;text&quot;: &quot;我&quot;,</div><div class="line">&quot;iconPath&quot;: &quot;pages/images/nav/mine_normal.png&quot;,</div><div class="line">&quot;selectedIconPath&quot;: &quot;pages/images/nav/mine_select.png&quot;</div><div class="line">&#125;</div><div class="line">]</div><div class="line">&#125;</div></pre></td></tr></table></figure>#### 网络请求示例代码说明:- url:为请求接口- data:请求参数- method: 请求方式- header:请求头- success:function(res){}请求回调函数 一般在这里进行数据绑定赋值 达到页面更新- that.setData{()} 赋值data中的变量<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">wx.request(&#123;</div><div class="line">url: &apos;http://www.wanandroid.com/banner/json&apos;,</div><div class="line">data: &#123;</div><div class="line">&#125;,</div><div class="line">method: &apos;GET&apos;,</div><div class="line">header: &#123;</div><div class="line">&apos;content-type&apos;: &apos;application/json&apos;</div><div class="line">&#125;,</div><div class="line">success: function (res) &#123;</div><div class="line">wx.stopPullDownRefresh()</div><div class="line">that.setData(&#123;</div><div class="line">imgUrls: res.data.data</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>#### 页面跳转及参数传递示例代码说明:`item_index:e.currentTarget.dataset.index 获取item下标索引 对应wxml中 data-index=&quot;{{index}}&quot;wx.navigateTo({})页面跳转url:&apos;path?xxx=xxx&amp;xxx=xxx....&apos;  页面路径+参数拼接options.xxx 参数接收 在onload中`<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//进入文章详细页面</div><div class="line">goToArticalDetail: function (e) &#123;</div><div class="line">var that = this</div><div class="line">var item_index = parseInt(e.currentTarget.dataset.index)</div><div class="line">console.log(&quot;item_index = &quot; + item_index)</div><div class="line">wx.navigateTo(&#123;</div><div class="line">url: &apos;../index-detail/index-detail?title=&apos; + that.data.articals[item_index].title + &apos;&amp;link=&apos; + that.data.articals[item_index].link</div><div class="line">&#125;)</div><div class="line">&#125;,</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">* 生命周期函数--监听页面加载</div><div class="line">*/</div><div class="line">onLoad: function (options) &#123;</div><div class="line">var that = this</div><div class="line">var title = options.title</div><div class="line">var link = options.link</div><div class="line">that.setData(&#123;</div><div class="line">artical_title: title,</div><div class="line">artical_link : link</div><div class="line">&#125;)</div><div class="line">//动态设置页面标题---文章标题</div><div class="line">wx.setNavigationBarTitle(&#123;</div><div class="line">title: that.data.artical_title</div><div class="line">&#125;)</div><div class="line">&#125;,</div></pre></td></tr></table></figure>#### 下拉刷新/上拉加载更多1.在app.json中加入开关 只有打开开关 生命周期函数才会被调用&gt; 在这里说明一个容易犯错的就是创建page的时候会自动生成四个文件,js文件中也会自动生成模板代码 生命周期函数都会自动生成,千万不要自己去在写一个 否则不报错 也不触发.<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&quot;window&quot;: &#123;</div><div class="line">&quot;backgroundTextStyle&quot;: &quot;light&quot;,</div><div class="line">&quot;navigationBarBackgroundColor&quot;: &quot;#69C3AA&quot;,</div><div class="line">&quot;navigationBarTitleText&quot;: &quot;玩安卓&quot;,</div><div class="line">&quot;navigationBarTextStyle&quot;: &quot;white&quot;,</div><div class="line">&lt;!--打开下拉刷新--&gt;</div><div class="line">&quot;enablePullDownRefresh&quot;: true,</div><div class="line">&lt;!--打开上拉加载更多--&gt;</div><div class="line">&quot;onReachBottomDistance&quot;: true,</div><div class="line">&quot;backgroundColor&quot;: &quot;#69C3AA&quot;</div><div class="line">&#125;,</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">onPullDownRefresh: function () &#123;</div><div class="line">this.data.curPage = 0</div><div class="line">this.getArticals(0)</div><div class="line">console.log(&apos;下拉刷新&apos;)</div><div class="line">&#125;,</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">onReachBottom: function () &#123;</div><div class="line">console.log(&apos;上拉加载更多&apos;)</div><div class="line">if (!this.data.loadingMoreHidden) &#123;</div><div class="line"></div><div class="line">&#125; else &#123;</div><div class="line">this.getArticals(this.data.curPage)</div><div class="line">&#125;</div><div class="line">this.setData(&#123;</div><div class="line">loadingMoreHidden: true</div><div class="line">&#125;)</div><div class="line">&#125;,</div></pre></td></tr></table></figure>2.主要的上拉加载逻辑控制在getArticals()f方法里处理的 我们慢慢分析<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">    getArticals: function (artical_pageindex) &#123;</div><div class="line">    var that = this</div><div class="line">    &lt;!--请求文章列表数据--&gt;</div><div class="line">    wx.request(&#123;</div><div class="line">    url: &apos;http://www.wanandroid.com/article/list/&apos; + artical_pageindex + &apos;/json&apos;,</div><div class="line">    data: &#123;</div><div class="line">    &#125;,</div><div class="line">    method: &apos;GET&apos;,</div><div class="line">    header: &#123;</div><div class="line">    &apos;content-type&apos;: &apos;application/json&apos;</div><div class="line">    &#125;,</div><div class="line">    success: function (res) &#123;</div><div class="line">    wx.hideNavigationBarLoading()</div><div class="line">    that.setData(&#123;</div><div class="line">    perPageSize: res.data.data.size,</div><div class="line">    curPage: res.data.data.curPage,</div><div class="line">    pageCount: res.data.data.pageCount</div><div class="line">    &#125;)</div><div class="line">    &lt;!--上拉加载更多的关键处理--&gt;</div><div class="line">    &lt;!--定义一个新的文章对象数组 用于装载拼接所有页的数据--&gt;</div><div class="line">    var articalsTemp = that.data.articals</div><div class="line">    &lt;!--当前如果处于第一页 那么清空这个对象数组 只装载第一页数据即可--&gt;</div><div class="line">    if (that.data.curPage == 1) &#123;</div><div class="line">    articalsTemp = []</div><div class="line">    &#125;</div><div class="line">    &lt;!--定义一个新的文章对象数组 赋值于请求返回对应页码的文章数据--&gt;</div><div class="line">    var articals = res.data.data.datas</div><div class="line">    &lt;!--判断,如果返回的某页的数据长度小于每页的数据长度 说明当前加载的页是最后一页了--&gt;</div><div class="line">    if (articals.length &lt; that.data.perPageSize) &#123;</div><div class="line">    console.log(&apos;没有更多了&apos;)</div><div class="line">    that.setData(&#123;</div><div class="line">    &lt;!--contcat 意思是向articalsTemp数组中添加数组 --&gt;</div><div class="line">    articals: articalsTemp.concat(articals),</div><div class="line">    loadingMoreHidden: false</div><div class="line">    &#125;)</div><div class="line">    &#125; else &#123;</div><div class="line">&lt;!-否则 当前不是最后一页,向articalsTemp数组中添加数组  --&gt;</div><div class="line">    console.log(&apos;有更多可加载&apos;)</div><div class="line">    that.setData(&#123;</div><div class="line">    articals: articalsTemp.concat(articals),</div><div class="line">    loadingMoreHidden: true,</div><div class="line">    &lt;!--当前页码增加1 依次类推--&gt;</div><div class="line">    curPage: that.data.curPage + 1</div><div class="line">    &#125;)</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">    &#125;)</div><div class="line">    &#125;,</div></pre></td></tr></table></figure>#### 自定义组件- 创建自定义组件        与创建普通页面类似 也包含.js .json .wxml .wxcss四个文件- 修改.json文件组件属性<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;component&quot;: true,</div><div class="line">&quot;usingComponents&quot;: &#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>- 编写wantab.js  附上wantab.js源码<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">// dist/wantab.js</div><div class="line">Component(&#123;</div><div class="line">/**</div><div class="line">* 组件的属性列表</div><div class="line">*/</div><div class="line">properties: &#123;</div><div class="line">//标题列表</div><div class="line">tablist: &#123;</div><div class="line">type: Array,</div><div class="line">value: []</div><div class="line">&#125;,</div><div class="line">currentTab: &#123;</div><div class="line">type: Number,</div><div class="line">value: 0,</div><div class="line">observer: function (newVale, oldVal) &#123;</div><div class="line">this.setData(&#123;</div><div class="line">currentTab: newVale</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;,</div><div class="line">tabname: &#123;</div><div class="line">type: String,</div><div class="line">value: &apos;&apos;</div><div class="line">&#125;,</div><div class="line">tabtype: &#123;</div><div class="line">type: Number,</div><div class="line">value: &apos;&apos;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;,</div><div class="line"></div><div class="line">/**</div><div class="line">* 组件的初始数据</div><div class="line">*/</div><div class="line">data: &#123;</div><div class="line"></div><div class="line">&#125;,</div><div class="line"></div><div class="line">/**</div><div class="line">* 组件的方法列表</div><div class="line">*/</div><div class="line">methods: &#123;</div><div class="line">onClickNavBar: function (e) &#123;</div><div class="line">this.triggerEvent(&apos;changeTab&apos;, &#123;</div><div class="line">currentNum: e.currentTarget.dataset.current</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>- 编写wantab.wxml 附上wantab.wxml 模板代码- 编写wantab.js 附上wantab.wxcss 组件样式<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/* dist/wantab.wxss */</div><div class="line">.scroll-view-x&#123;</div><div class="line">background-color: #fff;</div><div class="line">white-space: nowrap;</div><div class="line">position:fixed;</div><div class="line">z-index:10;</div><div class="line">top:0</div><div class="line">&#125;</div><div class="line">.scroll-view-x .scroll-view-item&#123;</div><div class="line">display:inline-block;</div><div class="line">margin:0 35rpx;</div><div class="line">line-height: 33px;</div><div class="line">cursor: pointer;</div><div class="line">&#125;</div><div class="line">.on&#123;</div><div class="line">border-bottom: 2px solid #69C3AA;</div><div class="line">color: #69C3AA</div><div class="line">&#125;</div></pre></td></tr></table></figure>以上就可以完成一个组件的定义了,下面贴出使用方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;navigationBarTitleText&quot;: &quot;项目&quot;,</div><div class="line">&quot;usingComponents&quot;: &#123;</div><div class="line">&quot;wantab&quot;:&quot;../../dist/component/wantab/wantab&quot;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>&gt; 使用方式与其他第三方的组件引入一致,在页面的.json文件中加入以上代码即可 注意路径根据项目而改变------#### 效果图展示最后放上其他页面的效果图 实现过程基本差不多 刚接触web 所以多做了些重复的工作,为了更熟悉使用这些组件和交互![1.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f63e0a70d6f?w=399&amp;h=710&amp;f=png&amp;s=111591)![2.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f641399c328?w=403&amp;h=715&amp;f=png&amp;s=63516)![3.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f6425bed96e?w=402&amp;h=713&amp;f=png&amp;s=153668)![4.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f642a6c5f3e?w=403&amp;h=714&amp;f=png&amp;s=87098)![5.png](https://user-gold-cdn.xitu.io/2018/4/2/16284f642cd7be16?w=401&amp;h=712&amp;f=png&amp;s=100637)------#### 完结感谢阅读,如有不对地方请见谅.</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习使用Gitlab Pull/Push/Request</title>
    <link href="http://yoursite.com/2017/12/06/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8GitLab%20Pull%20Push%20Request/"/>
    <id>http://yoursite.com/2017/12/06/学习使用GitLab Pull Push Request/</id>
    <published>2017-12-05T16:00:00.000Z</published>
    <updated>2018-04-02T06:25:19.284Z</updated>
    
    <content type="html"><![CDATA[<h4 id="GitLab-简介-官网"><a href="#GitLab-简介-官网" class="headerlink" title="GitLab 简介 官网"></a>GitLab 简介 <a href="https://about.gitlab.com/" target="_blank" rel="external">官网</a></h4><hr><blockquote><p><strong>特征</strong></p></blockquote><p> 1.GitLjavascript:void(null)ab 被任命为Forrester Wave 的领导者<br> 2.GitLab 提供易用性,可扩展性,集成性和创新性<br> 3.使用方式与码云略有不同,代码访问权限控制的更细致<br> 4.提供web和客户端方式且免费创建私有库</p><blockquote><p><strong>如何使用</strong></p></blockquote><p><strong>第一步 fork 源代码至自己的仓库</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-c46315a2dac9b620.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="fork 源代码" title="">                </div>                <div class="image-caption">fork 源代码</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-23ab0dda5f0bd06e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自己的仓库.png" title="">                </div>                <div class="image-caption">自己的仓库.png</div>            </figure><p><strong>第二步 clone 源代码</strong></p><p>​    方式一  Android Studio 操作<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-f1a7839059fc5ccc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="clone 源代码.png" title="">                </div>                <div class="image-caption">clone 源代码.png</div>            </figure></p><p>​    方式二 Git Bash 命令: git clone project_url 在自己选择的磁盘下再启动Git Bash 将项目拷贝到指定目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone xxxxxxx.git</div></pre></td></tr></table></figure><p><strong>第三步 pull 源代码</strong></p><p>​    方式一  Android Studio 操作</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-8b80a3ac6e9c08e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pull 源代码.png" title="">                </div>                <div class="image-caption">pull 源代码.png</div>            </figure><p>​    方式二 本地文件夹右键</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-68937ed3854e69ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件夹右键.png" title="">                </div>                <div class="image-caption">文件夹右键.png</div>            </figure><p>​    方式三 Git Bash 命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git fetch origin master //相当于是从远程获取最新版本到本地，不会自动合并。</div><div class="line">$ git log -p master..origin/master</div><div class="line">$ git merge origin/master</div></pre></td></tr></table></figure><p>​    或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull origin master //相当于是从远程获取最新版本并merge到本地</div></pre></td></tr></table></figure><p><strong>第四步 切换分支</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git branch -a    //列出所有分支</div><div class="line">$ git checkout origin/master //检出指定分支</div></pre></td></tr></table></figure><p><strong>第五步  代码开发及修改</strong></p><p>​    此处省略…………….</p><p><strong>第六步  代码提交commit</strong></p><p>​    方式一 Android Studio操作</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-d4a199ed41d8ef23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="提交commit.png" title="">                </div>                <div class="image-caption">提交commit.png</div>            </figure><p>​    方式二 文件夹右键操作 </p><p><img src="http://upload-images.jianshu.io/upload_images/8375916-987c8d1437cf2afa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件夹右键.png"></p><p>​    方式三 Git Bash命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git status //查看代码状态变化</div><div class="line">$ git add -A //提交所有修改内容</div><div class="line">$ git commit -m &quot;xxxx&quot; //提交至本地 xxx为提交说明文字</div><div class="line">$ git push //推送到自己的远程仓库 一般直接 commit and push 也可分开两个步骤</div></pre></td></tr></table></figure><p><strong>第七步 push代码到自己的仓库</strong></p><p>​    方式一 Android Studio操作 略…….</p><p>​    方式二 文件夹右键操作  略…….</p><p>​    方式三 Git Bash命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push //推送到自己的远程仓库</div></pre></td></tr></table></figure><p><em>以上 第六步和第七部 commit 和 push 可以一气呵成.</em></p><p><strong>第八步 更新源代码</strong></p><p>​    <em>防止此操作前有人更新代码 直接合并会产生冲突 或者 覆盖别人的代码等问题 这里最好更新一次</em></p><p>​    <strong>重复第三步</strong></p><p><em>最后一步啦</em></p><p><strong>第九步 merge request 合并代码请求</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/8375916-ee23c0af7da6ed73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="合并代码.png" title="">                </div>                <div class="image-caption">合并代码.png</div>            </figure><p>等待代码被合并……</p><p><strong>第十步 等待修bug……然后重复以上操作……</strong></p><p>完结</p><blockquote><p>持续更新 此篇文章只是工作中要做的基本操作 写出来是为了分享给别人参考 如果有错 希望指正 刚刚接触git使用 不是很熟练 大部分都是不断摸索的 最开始SVN 后来码云 GitHub 如今GitLab 也差不多 熟能生巧.</p><p>同时也是练习MarkDown 也是刚接触.谢谢阅读.推荐Typora 挺好用的 免费额.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;GitLab-简介-官网&quot;&gt;&lt;a href=&quot;#GitLab-简介-官网&quot; class=&quot;headerlink&quot; title=&quot;GitLab 简介 官网&quot;&gt;&lt;/a&gt;GitLab 简介 &lt;a href=&quot;https://about.gitlab.com/&quot; targ
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android高效绘图-平移缩放卡顿</title>
    <link href="http://yoursite.com/2017/10/20/Android%E9%AB%98%E6%95%88%E7%BB%98%E5%9B%BE-%E5%B9%B3%E7%A7%BB%E7%BC%A9%E6%94%BE%E5%8D%A1%E9%A1%BF/"/>
    <id>http://yoursite.com/2017/10/20/Android高效绘图-平移缩放卡顿/</id>
    <published>2017-10-19T16:00:00.000Z</published>
    <updated>2017-10-20T10:36:58.559Z</updated>
    
    <content type="html"><![CDATA[<p>本人新手一枚,第一次写博客,写的不好请勿喷,困扰小弟很久的问题,今天终于解决,这里奉上,供小伙伴借鉴,后面我会奉上从基础手指绘图到平移缩放所有的实现过程以及走过的坑,言归正传,下面开始列出我寻找卡顿元凶之路.</p><ul><li><p><strong>采用双重画布的方式进行缓存—-无明显效果</strong></p></li><li><p><strong>修改绘图框架,减少绘图中的大量计算,优化了数据结构—并无作用</strong></p></li><li><p><strong>对象池的使用,避免重绘方法OnDraw中创建大量的对象(Path)—貌似没什么改变</strong></p></li><li><p><strong>各种分析过后知道了应该是内存抖动,垃圾回收机制造成的卡顿,开始尝试对象的软引用—然而也无作用</strong></p></li><li><p><strong>崩溃了的同时,放弃一段时间,但不管是坐车还是吃饭还是睡觉前,都会在想是什么鬼东西呢,边想着边做着其他功能,但是越做越觉得这个卡顿问题一天不解决,一天心情就不好了</strong></p></li><li><p><strong>最终在百谷了很久无果后,开始觉得对APP内存的使用检测,开始学习,应该会找到答案</strong></p></li><li><p><strong>功夫不负有心人,解决了~</strong></p></li><li><p><strong>不卖关子了,开始奉上解决方式,其实很简单,我只是新手,觉得很low的请左上角返回,不要喷我.</strong></p></li></ul><hr><h2 id="使用工具Eclipse-DDMS"><a href="#使用工具Eclipse-DDMS" class="headerlink" title="使用工具Eclipse DDMS"></a>使用工具Eclipse DDMS</h2><hr><ul><li><p>Heap分析</p></li><li><p>Allocation Tracker 分析</p></li></ul><hr><h3 id="onDraw-代码块"><a href="#onDraw-代码块" class="headerlink" title="onDraw()代码块"></a>onDraw()代码块</h3><pre><code>所有绘制的对象，例如：画直线,弧线,矩形,填充,等等.需要绘制的不可预知多少的的对象,所以这里不可避免需要重绘,循环遍历对象的绘制方法,这里也是出现问题的根源,重绘的时候会调用每个对象的绘图方法,方法中一定会创建一些对象,比如:new Path();当然卡顿他不是最终凶手,不过后面还需要对他进行使用对象池,避免创建过多的path对象.</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">protected void onDraw(Canvas canvas)&#123;</div><div class="line">super.onDraw(canvas);</div><div class="line">mCanvas = canvas;</div><div class="line">try &#123;</div><div class="line">lFHouse.setBacgroundColor(this, paint_region_bag);</div><div class="line"></div><div class="line">for(LFWall wall : lFHouse.houseWalls)&#123;</div><div class="line">              wall.doDraw(this, mCanvas)</div><div class="line">&#125;</div><div class="line">for(LFWall wall : lFHouse.houseWalls)&#123;</div><div class="line">for (LFDoor door : wall.walldoors) &#123;</div><div class="line">door.onDraw(this, mCanvas);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">&#125; catch (Exception e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>###第一步</p><pre><code>运行程序,切换到DDMS视图 如题所示操作</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://img.blog.csdn.net/20170303114323104?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjQ4Njg3NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">                </div>                <div class="image-caption">这里写图片描述</div>            </figure><hr><p>###第二步<br>     操作程序有卡顿的地方几次,手动点击Cause GC 如图<br> <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://img.blog.csdn.net/20170303114613576?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjQ4Njg3NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">                </div>                <div class="image-caption">这里写图片描述</div>            </figure></p><hr><p>###第三步<br>    分析一下,多次操作,多次Cause GC,注意看free中的Total Size 大小,如果抖动的比较大,但是每次都能降低,反复增大,减少,说明存在了内存的抖动,即当前操作存在短时间内创建大量的对象,占用的内存,唤起了GC短时间内快速去回收无用的对象,这个回收的时间内,程序的其他操作是需要等待GC完成才可以继续工作的,所有就出现了卡慢,对象太多,gc的遍历回收工作占用的时间就过长了.可以通过data object的数量可以清楚的看到内存的剧增和剧减的情况.<br>    通过以上分析,我们知道了程序卡顿的具体原因,下面就需要找出是哪些对象占用了呢,找出他必须弄死他.</p><hr><p>###第四步</p><p>打开Allocation Tracker视图,这个家伙很重要,能追踪查看内存到底让哪个小崽子占用了,还可以定位到包名,类名,代码行数,厉害了,我才会使用..,忏愧啊.勿喷小伙伴门.如图所示:<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://img.blog.csdn.net/20170303123728227?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjQ4Njg3NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">                </div>                <div class="image-caption">这里写图片描述</div>            </figure></p><hr><h3 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://img.blog.csdn.net/20170303123808072?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjQ4Njg3NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">                </div>                <div class="image-caption">这里写图片描述</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://img.blog.csdn.net/20170303124910773?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjQ4Njg3NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" title="">                </div>                <div class="image-caption">这里写图片描述</div>            </figure><pre><code>这里说明一下 ,由于我优化了程序,查找元凶的现场,已被我清理,所以这里看不到那些真正的元凶.下面我列出元凶,以供小伙伴借鉴.</code></pre><p>[TOC]</p><h3 id="揭露卡顿元凶"><a href="#揭露卡顿元凶" class="headerlink" title="揭露卡顿元凶"></a>揭露卡顿元凶</h3><h4 id="元凶1"><a href="#元凶1" class="headerlink" title="元凶1:"></a>元凶1:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//这个方法是用来做精度转换的 保留几位小数</div><div class="line">public static float round(float v, int scale) &#123;</div><div class="line">if (scale &lt; 0) &#123;</div><div class="line">throw new IllegalArgumentException(&quot;The scale must be a positive integer or zero&quot;);</div><div class="line">&#125;</div><div class="line">//重点是下面这段代码</div><div class="line">BigDecimal b = new BigDecimal(Float.toString(v));</div><div class="line">BigDecimal one = new BigDecimal(&quot;1&quot;);</div><div class="line">return b.divide(one, scale, BigDecimal.ROUND_HALF_UP).floatValue();</div><div class="line">&#125;</div></pre></td></tr></table></figure><pre><code>  1.BigDecimal 对象占用的资源BigInteger通过追踪内存占用显示,这里就不贴图了.这里解释下为什么会,由于我这个方法,在画线的时候对于每个点的x,y都进行了精度转换处理,又因为在平移缩放的时候我们是需要不断重绘的,也就是不断执行onDraw()这个系统方法,那么在这里我循环调用重绘线条,每一个点的x,y都需要重新计算并转换,造成了不断new BigDecimal(). 这个内部机制我还需要去底层源码去看下,现在只知道是这个东西占用了不少的内存,每new 一个好像是占用了144  2. Float.toString(v)这个转换也是占用了很大资源StringBuilder 具体底层小弟也是不能深入解释了  3. .floatValue() 这个也是占用了很多 char[] 数组.</code></pre><h4 id="元凶2"><a href="#元凶2" class="headerlink" title="元凶2:"></a>元凶2:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * 屏幕的宽</div><div class="line"> */</div><div class="line">public static int getScreenWidth(Activity activity)&#123;</div><div class="line">    DisplayMetrics dm = new DisplayMetrics();</div><div class="line">dm = activity.getResources().getDisplayMetrics();</div><div class="line">activity.getWindowManager().getDefaultDisplay().getMetrics(dm);</div><div class="line">   return dm.widthPixels ;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">/*</div><div class="line"> * 屏幕的高</div><div class="line"> */</div><div class="line">   public static float getScreenHeigth(Activity activity)&#123;</div><div class="line">    DisplayMetrics dm = new DisplayMetrics();</div><div class="line">dm = activity.getResources().getDisplayMetrics();</div><div class="line">activity.getWindowManager().getDefaultDisplay().getMetrics(dm);</div><div class="line">   return dm.heightPixels ;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>这里贴出的获取屏幕的宽高代码是 很正常的方法,看起来没什么特别.在看下面:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//该方法是我用于真实坐标点与屏幕坐标点的一个转换 </div><div class="line">public LFPoint GetScreenPoint(LFPoint Point) &#123;</div><div class="line">float X = (float) (Zoom * DotsPerMeter * Point.x + Origin.x);</div><div class="line">float Y = (float) (DisplayUtil.getScreenHeigth(drawActivity) - Zoom * DotsPerMeter * Point.y + Origin.y);</div><div class="line">//X = DataUtils.round(X, 2);</div><div class="line">//Y = DataUtils.round(Y, 2);</div><div class="line">LFPoint p = new LFPoint(X, Y, Point.bulge);</div><div class="line">return p;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><pre><code>重点就是 重绘的时候每个点都要不断的进行转换,也就是在onDraw中不断的随手指的移动和缩放进行转换...看到了吗 下面有调用到获取屏幕的静态方法.就是它,不断的在获取,获取......导致了占用大量的资源 貌似也是每个144.我们继续...找</code></pre><p>到这里,我们的程序的卡顿情况,被我们清理的差不多了,终于不会卡了,瞬间感觉整个人都飘了,原来自己给自己挖了那么多的坑,小弟真实惭愧,网上的代码段固然方便,但是不能一味的直接拿来用,其中很多不知道的东西,你往往忽略了的地方就是问题存在的地方,当你无计可施的时候,还需要坚持 一步步探索,找寻答案.<br>顺便再啰嗦一句,onDraw中不可避免的是创建大量的path对象,这里根据网上搜寻的结果,总结了下还是用对象池比较好,但是网上有两个版本,一个是可以任何对象的,一个是只有自定义的类对象才可以,系统Path对象好像不行,所以简单的做了一下改动,<br>对,就是自定义path, 我啥都没改 仅仅是extend了一下,然后套用了下面的对象池的初始化方法,类似Handler的获取Message的时候的方式一样,不知道对不对,贴出代码,参考一下,反正我试过,可用.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public class MyPath extends Path &#123;</div><div class="line"></div><div class="line">private static final SynchronizedPool&lt;MyPath&gt; sPool = new SynchronizedPool&lt;MyPath&gt;(10);</div><div class="line"></div><div class="line">public static MyPath obtain() &#123;</div><div class="line">MyPath instance = sPool.acquire();</div><div class="line">return (instance != null) ? instance : new MyPath();</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void recycle() &#123;</div><div class="line">sPool.release(this);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>好了,以上的寻找卡顿元凶之路,终于告一段落,还有很多地方需要优化的,后面再继续奉上,感谢看完的小伙伴,忍不住发一篇,希望能帮到你,后面我会继续更新出绘图相关的操作,比如画布的,比如view的,还有缩放,平移的实现,这些你是百谷不到的,那些基础的东西我看过很多,真的是千篇一律的.针对的平移缩放都是图片的操作而不是坐标点.<br>下次再见~有高见欢迎点评,虚心接受.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本人新手一枚,第一次写博客,写的不好请勿喷,困扰小弟很久的问题,今天终于解决,这里奉上,供小伙伴借鉴,后面我会奉上从基础手指绘图到平移缩放所有的实现过程以及走过的坑,言归正传,下面开始列出我寻找卡顿元凶之路.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;采用双重画布的方
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用GitHub+Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2017/10/20/%E5%AD%A6%E4%B9%A0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/10/20/学习搭建个人博客/</id>
    <published>2017-10-19T16:00:00.000Z</published>
    <updated>2017-10-20T10:38:21.830Z</updated>
    
    <content type="html"><![CDATA[<p>第一个MarkDown文章</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一个MarkDown文章&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
